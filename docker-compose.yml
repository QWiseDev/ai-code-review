version: '3.8'

services:
  # Flask API 后端
  api:
    build:
      context: .
      target: app
    ports:
      - "5001:5001"
    environment:
      - ENV=production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_codereview
    volumes:
      - ./conf:/app/conf
      - ./log:/app/log
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      - redis
      - postgres

  # Vue.js 前端 (开发模式)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:5001
    restart: unless-stopped
    depends_on:
      - api

  # RQ Worker (后台任务处理)
  worker:
    build:
      context: .
      target: worker
    environment:
      - ENV=production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_codereview
    volumes:
      - ./conf:/app/conf
      - ./log:/app/log
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      - redis
      - postgres

  # Redis (缓存和队列)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # PostgreSQL (数据库)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ai_codereview
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Nginx (生产环境反向代理)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
  postgres_data: